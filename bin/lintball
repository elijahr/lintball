#!/usr/bin/env bash

set -ueo pipefail

# resolve symlink, for instance, if lintball is linked to /usr/local/bin
BIN="$(realpath "${BASH_SOURCE[0]}" 2>/dev/null || readlink -f "${BASH_SOURCE[0]}" 2>/dev/null || readlink "${BASH_SOURCE[0]}" 2>/dev/null || echo "${BASH_SOURCE[0]}")"

case "$BIN" in
  ../*)
    # Resolve relative paths
    BIN="$(dirname "${BASH_SOURCE[0]}")/${BIN}"
    BIN="$(cd "$(dirname "$BIN")"; pwd)/$(basename "$BIN")"
    ;;
esac

if [ -z "$BIN" ]; then
  BIN="${BASH_SOURCE[0]}"
fi

# path to node_modules/.bin
BIN_DIR="$(dirname "${BIN}")"

if [ -f "${BIN_DIR}/../configs/lintballrc-defaults.json" ]; then
  # path to repo
  LINTBALL_DIR="$(
    cd "${BIN_DIR}/.."
    pwd
  )"
elif [ -f "${BIN_DIR}/../lintball/configs/lintballrc-defaults.json" ]; then
  # path to installation via npm, local
  LINTBALL_DIR="$(
    cd "${BIN_DIR}/../lintball"
    pwd
  )"
elif [ -f "${BIN_DIR}/../lib/node_modules/lintball/configs/lintballrc-defaults.json" ]; then
  # path to installation via npm, global
  LINTBALL_DIR="$(
    cd "${BIN_DIR}/../lib/node_modules/lintball"
    pwd
  )"
else
  echo "Cannot find lintball installation from ${BIN}" >&2
  find "$BIN_DIR/.."
  exit 1
fi

# shellcheck source=SCRIPTDIR/../lib/cli.bash
source "${LINTBALL_DIR}/lib/cli.bash"

cli_entrypoint "$@" || exit $?
